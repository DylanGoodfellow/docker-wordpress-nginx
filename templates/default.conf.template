# Upstream to abstract backend connection(s) for php
upstream php {
    server wordpress:9000;
}

server {
    listen          ${NGINX_HTTP};
    listen          [::]:${NGINX_HTTP};
    server_name     ${NGINX_HOST};
    return          301 https://$host$request_uri;
}

server {
    listen          ${NGINX_HTTPS}         ssl http2;
    listen          [::]:${NGINX_HTTPS}    ssl http2;
    server_name     ${NGINX_HOST};

    ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers               "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";

    ssl_certificate           /etc/ssl/${NGINX_CERT};
    ssl_certificate_key       /etc/ssl/${NGINX_KEY};

    root /var/www/html;

    index index.php;

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    location / {
        # This is cool because no php is touched for static content.
        # include the "?$args" part so non-default permalinks doesn't break when using query string
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
        include fastcgi_params;
        fastcgi_intercept_errors on;
        fastcgi_pass php;
        #The following parameter can be also included in fastcgi_params file
        fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires max;
        log_not_found off;
    }
}